for(i in v) {
print(i)
}
v <- LETTERS[1:1]
for(i in v) {
print(i)
}
v <- LETTERS[1:1]
for(i in v) {
print(i)
}
v <- LETTERS[1:1]
for(i in v) {
print(i)
}
v <- LETTERS[1:1]
for(i in v) {
print(i)
}
v <- LETTERS[1:1]
for(i in v) {
print(i)
}
v <- LETTERS[1:1]
for(i in v) {
print(i)
}
v <- LETTERS[0:3]
for(i in v) {
print(i)
}
v <- LETTERS[1:3]
for(i in v) {
print(i)
}
for(i in v) {
if(i == 'D')
next
print(i)
}
v <- LETTERS[1:6]
for(i in v) {
if(i == 'D')
next
print(i)
}
for(i in v) {
if(i == 'D')
next
if(i == 'F')
break
print(i)
}
print(seq(32,44))
print(mean(1:10))
print(sum(1:10))
f1 <- function(a) {
for(i in 1:a)
{
b <- i ^ 2
print(b)
}
}
f1(3)
f1 = function(a) {
for(i in 1:a)
{
b <- i ^ 2
print(b)
}
}
f1 = function(a) {
for(i in 1:a)
{
b <- i ^ 2
print(b)
}
}
f1(3)
f2 = function(x = 2) {
y = x * 2
return(y)
}
f2()
str1 <- paste("hello", "how", "are you? ", sep="-")
str1 <- paste("hello", "how", "are you? ", sep="-")
str1 <- paste("hello", "how", "are you? ", sep="-")
print(str1)
str1 <- paste("hello", "how", "are you? ")
print(str1)
str1 <- paste("hello", "how", "are you? ", collapse="")
print(str1)
str1 <- paste("hello", "how", "are you? ", collapse="")
print(str1)
str1 <- paste("hello", "how", "are you? ", sep="", collapse="")
print(str1)
str1 <- paste("hello", "how ", "are you? ",collapse="")
print(str1)
str1 <- paste("hello", "how ", " are you? ",collapse="")
print(str1)
str1 <- paste("hello", "how ", " are you? ",collapse="e")
print(str1)
str1 <- paste("hello", "how ", " are you? ",collapse="e")
print(str1)
str1 <- paste("hello", "how", "are you?",sep="")
print(str1)
str1 <- paste("hello", "how", "are you? ", sep="-")
print(str1)
result <- format(c(6611,13.14521), digits=3, nsmall=2)
print(result)
result <- format(c(6611,13.14521), digits=5, nsmall=2)
print(result)
result <- format(c(6611,13.14521), digits=5, nsmall=1)
print(result)
result <- format(c(6,13.14521), digits=5, nsmall=1)
print(result)
result <- format(c(6,13.14521), digits=5)
print(result)
result <- format(c(6,13.14521), digits=5)
print(result)
result <- format(c(60,13.14521), digits=5)
print(result)
result <- format("hello", width=8, justify="c")
print(result)
pnorm(1,0,1)
t <- seq(5, 9, by=0.4)
print(t)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[1]
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[0]
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[0]
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[2]
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[1:2]
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[-1]
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[-2]
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[-2]
print(u[2])
#STERGEREA UNUI ELEMENT DINTR-UN VECTOR
u <- t[-2]    #se sterge el. de pe pozitia 2
u <- t[c(-2, -3)]   #se sterge si dp poz 2 si dp poz 3
print(u[2])
u <- t[-2]    #se sterge el. de pe pozitia 2
u <- t[c(-2, -3)]   #se sterge si dp poz 2 si dp poz 3
print(u)
t <- c("monday", "tue", "wed", "thu", "fri", "sat", "sun")
u <- t[c(2,3)]
print(u)
li1 <- list(c(2,5,3), 21.3, sin)
print(li1)
li1 <- list(c(2,5,3), 21.3, sin)
print(li1)
#give names to elements in list
names(li1) <- c("un vector", "un nr", "o fct")
print(li1)
names(li1) <- c("un vector", "un nr", "o fct")
print(li1)
#access element by its given name or by index (INDEXED BY 1)
print(li1$"un vector")
print(li1$"un nr")
l = list(1,2,3,4)
l[5] = "nou"
print(l)
l[5] = NULL   #DELETE
print(l)
apple <- c('red', 'green', "yellow")
print(apple)
#extend vector
apple <- c(apple, 'blue')
print(apple)
l1 <- list(1,2,3)
l2 <- list(4,5,6)
print(c(l1, l2))
v1 <- unlist(l1)
v2 <- unlist(l2)
print(v1 + v2)
m = matrix(c('a','b','c','d','e','f'), nrow = 2, ncol = 3, byrow = TRUE)
print(m)
print(m[1,1]) # -> primul el
print(m[1,1]) # -> primul el
print(m[2,]) #-> prima linie
print(m[,3]) # > a 3a coloana
a <- array(c('green', 'yellow'), dim = c(3,3,2))
print(a)
print(a[,,2])
apple_colors <- c('green', 'red', 'red', 'yellow', 'green')
factor_apple <- factor(apple_colors)
print(factor_apple)
print(nlevels(factor_apple))  #nr. of elements in set(vct)
BMI <- data.frame(
gender = c("M", "M", "F"),
height = c(152, 171.5, 165),
weight = c(81, 93, 78),
age = c(42,38,26)
)
print(BMI)
#every column is a factor, and you can print it to see the individual values
#uita te mai sus pt ce e aia factor
print(BMI$gender)
print(nlevels(BMI$gender))
print(BMI$gender)
v <- gl(3, 2, labels=c("cuv1", "cuv2"))
print(v)
print(BMI)
v <- gl(3, 2, labels=c("cuv1", "cuv2"))
print(v)
v <- gl(3, 4, labels=c("cuv1", "cuv2"))
print(v)
BMI <- data.frame(
gender = c("M", "M", "F"),
height = c(152, 171.5, 165),
weight = c(81, 93, 78),
age = c(42,38,26)
,stringsAsFactors = TRUE
)
print(BMI)
print(BMI$gender)
BMI <- data.frame(
gender = c("M", "M", "F"),
height = c(152, 171.5, 165),
weight = c(81, 93, 78),
age = c(42,38,26)
#,stringsAsFactors = TRUE
)
print(BMI)
print(BMI$gender)
str(BMI)  #-> print the structure of data frame
print(summary(BMI))  #get the statistical nature of data
print(data.frame(BMI$gender, BMI$age))
print(emp.data[1:2,])
print(BMI[1:2,])
print(BMI[c(2,4), c(1,3)])
print(BMI)
print(BMI[c(2,4), c(1,3)])
BMI$dept <- c("IT", "HR", "PR")
print(BMI)
BMI2 <- data.frame(
gender = c("F", "F"),
height = c(182, 155),
weight = c(91, 50),
age = c(27,19)
#,stringsAsFactors = TRUE
)
BMI = rbind(BMI, BMI2)
print(BMI)
BMI2 <- data.frame(
gender = c("F", "F"),
height = c(182, 155),
weight = c(91, 50),
age = c(27,19),
dept = c("HR", "It")
#,stringsAsFactors = TRUE
)
BMI = rbind(BMI, BMI2)
print(BMI)
mtcars
x <- c(21, 62, 3)
labels <- c ("Bucharest", "Prague", "Cluj")
#give name to chart file
png(file="pie.png")
pie(x, labels)
#save file
dev.off()
png(file="pie.png")
pie(x, labels, main="Titlu", col=rainbow(length(x)))
#save file
dev.off()
x <- c(10,3,28, 4)
labels <- c("Bucharest", "Iasi", "Cluj", "Oradea")
percent <- round(100*x/sum(x), 1)
#open file
png(file="percentage_pie.jpg")
#add pie
pie(x, labels = percent, main="Cities", fill = rainbow(length(x)))
#add legend
legend("topright", labels, cex = 0.8, fill = rainbow(length(x)))
#close file
dev.off()
x <- c(10,3,28, 4)
labels <- c("Bucharest", "Iasi", "Cluj", "Oradea")
percent <- round(100*x/sum(x), 1)
#open file
png(file="percentage_pie.jpg")
#add pie
pie(x, labels = percent, main="Cities", col = rainbow(length(x)))
#add legend
legend("topright", labels, cex = 0.8, fill = rainbow(length(x)))
#close file
dev.off()
H <- c(7, 12, 28, 3)
W <- c("Mar", "Apr", "May", "Jun")
png(file="barchart.jpg")
#add barplot
barplot(H, names.arg=M, xlab="Month", ylab="Revenue", col="blue", border="red")
dev.off()
H <- c(7, 12, 28, 3)
W <- c("Mar", "Apr", "May", "Jun")
png(file="barchart.jpg")
#add barplot
barplot(H, names.arg=W, xlab="Month", ylab="Revenue", col="blue", border="red")
dev.off()
colors <- c("orange", "green", "brown")   #un bar va avea etajele astea
months <- c("Mar", "Apr", "Ju", "Aug", "Sep")
regions <- c("E", "W", "N")   #un etaj va reprezenta una dintre astea
M <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11), nrow=3, ncol=5, byrow=TRUE)
png(file="stacked_barchart.jpg")
barplot(M, main="total rev", names.arg=months, x.lab="month", ylab="revenue", col=colors)
legend("topleft", regions, cex=1.3, fill = colors)
dev.off()
colors <- c("orange", "green", "brown")   #un bar va avea etajele astea
months <- c("Mar", "Apr", "Ju", "Aug", "Sep")
regions <- c("E", "W", "N")   #un etaj va reprezenta una dintre astea
M <- matrix(c(2,9,3,11,9,4,8,7,3,12,5,2,8,10,11), nrow=3, ncol=5, byrow=TRUE)
png(file="stacked_barchart.jpg")
barplot(M, main="total rev", names.arg=months, xlab="month", ylab="revenue", col=colors)
legend("topleft", regions, cex=1.3, fill = colors)
dev.off()
input <- mtcars[,c('mpg', 'cyl')]
print(head(input))
input <- mtcars[,c('mpg', 'cyl')]
print(input)
input <- mtcars[,c('mpg', 'cyl')]
print(input)
input <- mtcars[,c('mpg', 'cyl')]
print(head(input))
png(file="boxplot.png")
boxplot(mpg ~ cyl, data=mtcars, xlab="Nr of cylinders", ylab="Miles/gallon", main = "data")
dev.off()
v <- c(9, 13, 21, 8, 36, 22, 12, 41, 31, 33, 19)
png(file="histogram.png")
hist(v,xlab="weight", col="yellow", border="blue")
dev.off()
v <- c(7, 12, 28, 3, 41)
png(file="line_chart.png")
plot(v, type="o")
dev.off()
input = mtcars[,c('wt','mpg')]
png(file = "scatterplot.png")
#plot chart for cars with weight between 2.5 to 5 and mileage btw 15 and 30
plot(x=input$wt, y=input$mpg, xlab="weight", ylab="mileage", xlim=c(2.5,5), ylim=c(15,30))
dev.off()
v = c(1,2,5,NA)
print(median(v, na.rm=TRUE))
v = c(1,2,7,NA)
print(median(v, na.rm=TRUE))
v = c(7,2,1,NA)
print(median(v, na.rm=TRUE))
v = c(7,3,2,1,NA)
print(median(v, na.rm=TRUE))
v <- c(1,2,3,1,1,3)
print(getmode(v))
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
v <- c(1,2,3,1,1,3)
print(getmode(v))
x = c(1,2,3,4)
print(x)
x = c(1,2,3,4)
print(x)
v = rnorm(100, 0.3, 1)
print(v)
v = rnorm(100, 1, 0.3)
print(v)
v = rnorm(100, 1, 0.3)
print(v)
media = mean(rnorm)
print(media)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda = getmode(v)
print(moda)
mediana = median(v)
print(mediana)
media = mean(rnorm, na.rm=TRUE)
print(media)
v = rnorm(100, 1, 0.3)
print(v)
media = mean(rnorm)
print(media)
v = rnorm(100, 1, 0.3)
print(v)
media = mean(v)
print(media)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda = getmode(v)
print(moda)
mediana = median(v)
print(mediana)
v = rnorm(100, 1, 0.3)
print(v)
media = mean(v)
print(media)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda = getmode(v)
print(moda)
mediana = median(v)
print(mediana)
#EX 1
v = rnorm(100, 1, 0.3)
print(v)
media = mean(v)
print(media)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda = getmode(v)
print(moda)
mediana = median(v)
print(mediana)
png(file="neagu_histograma.png")
hist(v, col="green")
dev.off()
Mfct = function(i, j){
return (1 / sqrt( (i + 2)(j + 2) ))
}
Nfct = function(i, j){
return ( (i + 1) / (j + 1) )
}
v1 = seq(1, 15)
v2 = seq(1, 15)
M = outer(v1, v2, Mfct)
N = outer(v1, v2, Nfct)
print(M)
print(N)
Mfct = function(i, j){
return (1 / sqrt( (i + 2)(j + 2) ))
}
Nfct = function(i, j){
return ( (i + 1) / (j + 1) )
}
v1 = seq(1, 15)
v2 = seq(1, 15)
M = outer(v1, v2, Mfct)
N = outer(v1, v2, Nfct)
print(M)
print(N)
print(M)
M = outer(v1, v2, Mfct)
Mfct = function(i, j){
return (1 / sqrt( (i + 2) * (j + 2) ))
}
Nfct = function(i, j){
return ( (i + 1) / (j + 1) )
}
v1 = seq(1, 15)
v2 = seq(1, 15)
M = outer(v1, v2, Mfct)
N = outer(v1, v2, Nfct)
print(M)
print(N)
MN = M %*% N
print(det(MN))
#EX 3
v = rnorm(100, 1, 0.3)
print(v)
media = mean(v)
print(media)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
moda = getmode(v)
print(moda)
mediana = median(v)
print(mediana)
# b)
png(file="neagu_histograma.png")
hist(v, col="green")
dev.off()
#EX 4
Mfct = function(i, j){
return (1 / sqrt( (i + 2) * (j + 2) ))
}
Nfct = function(i, j){
return ( (i + 1) / (j + 1) )
}
v1 = seq(1, 15)
v2 = seq(1, 15)
M = outer(v1, v2, Mfct)
N = outer(v1, v2, Nfct)
print(M)
print(N)
MN = M %*% N
if(det(MN) != 0){
print("Inversabila!")
} else {
print("Nu e inversabila!")
}
